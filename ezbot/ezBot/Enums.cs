// Decompiled with JetBrains decompiler
// Type: ezBot.Enums
// Assembly: ezBot, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3B78F9D0-7802-4B84-A548-D5B6D416D380
// Assembly location: D:\Desktop\ezBot.exe

namespace ezBot
{
  internal class Enums
  {
    public static int GetChampion(string name)
    {
      switch (name)
      {
        case "AATROX":
          return 266;
        case "AHRI":
          return 103;
        case "AKALI":
          return 84;
        case "ALISTAR":
          return 12;
        case "AMUMU":
          return 32;
        case "ANIVIA":
          return 34;
        case "ANNIE":
          return 1;
        case "ASHE":
          return 22;
        case "AURELION":
        case "AURELIONSOL":
        case "AURELION-SOL":
          return 266;
        case "AZIR":
          return 268;
        case "BARD":
        case "BARDO":
          return 432;
        case "BLITZCRANK":
        case "BLITZ":
          return 53;
        case "BRAND":
          return 63;
        case "BRAUM":
          return 201;
        case "CAITLYN":
          return 51;
        case "CASSIOPEIA":
          return 69;
        case "CHOGATH":
          return 31;
        case "CORKI":
          return 42;
        case "DARIUS":
          return 122;
        case "DIANA":
          return 131;
        case "DRMUNDO":
        case "MUNDO":
        case "DR-MUNDO":
          return 36;
        case "DRAVEN":
          return 119;
        case "EKKO":
          return 245;
        case "ELISE":
          return 60;
        case "EVELYNN":
        case "EVELYN":
          return 28;
        case "EZ":
        case "EZREAL":
          return 81;
        case "FIDDLE":
        case "FIDDLESTICK":
        case "FIDDLESTICKS":
          return 9;
        case "FIORA":
          return 114;
        case "FIZZ":
          return 105;
        case "GALIO":
          return 3;
        case "GP":
        case "GANGPLANK":
          return 41;
        case "GAREN":
          return 86;
        case "GNAR":
          return 150;
        case "GRAGAS":
          return 79;
        case "GRAVES":
          return 104;
        case "HECARIM":
          return 120;
        case "HEIMER":
        case "HEIMERDINGER":
          return 74;
        case "ILLAOI":
          return 420;
        case "IRELIA":
          return 39;
        case "JANNA":
          return 40;
        case "JARVAN":
        case "J4":
        case "JIV":
        case "JARVANIV":
        case "JARVAN4":
        case "JARVAN-IV":
        case "JARVAN-4":
          return 59;
        case "JAX":
          return 24;
        case "JAYCE":
          return 126;
        case "JHIN":
          return 202;
        case "JINX":
          return 222;
        case "KALISTA":
          return 429;
        case "KARMA":
          return 43;
        case "KARTHUS":
          return 30;
        case "KASSADIN":
          return 38;
        case "KAT":
        case "KATARINA":
          return 55;
        case "KAYLE":
          return 10;
        case "KENNEN":
          return 85;
        case "KHAZIX":
          return 121;
        case "KINDRED":
          return 203;
        case "KLED":
          return 240;
        case "KOG":
        case "KOGMAW":
        case "KOG-MAW":
          return 96;
        case "LB":
        case "LEBLANC":
          return 7;
        case "LEE":
        case "LEESIN":
        case "LEE-SIN":
          return 64;
        case "LEONA":
          return 89;
        case "LISSANDRA":
        case "LISS":
          return (int) sbyte.MaxValue;
        case "LUCIAN":
          return 236;
        case "LULU":
          return 117;
        case "LUX":
          return 99;
        case "MALPHITE":
          return 54;
        case "MALZAHAR":
          return 90;
        case "MAOKAI":
          return 57;
        case "MASTER":
        case "YI":
        case "MASTERYI":
        case "MASTER-YI":
          return 11;
        case "MISS":
        case "FORTUNE":
        case "MF":
        case "MISSFORTUNE":
        case "MISS-FORTUNE":
          return 21;
        case "MORDEKAISER":
          return 82;
        case "MORGANA":
          return 25;
        case "NAMI":
          return 267;
        case "NASUS":
          return 75;
        case "NAUTILUS":
          return 111;
        case "NIDA":
        case "NIDALEE":
          return 76;
        case "NOC":
        case "NOCTURNE":
          return 56;
        case "NUNU":
          return 20;
        case "OLAF":
          return 2;
        case "ORIANA":
          return 61;
        case "PANTHEON":
          return 80;
        case "POPPY":
          return 78;
        case "QUINN":
          return 133;
        case "RAMMUS":
          return 33;
        case "REKSAI":
        case "REK-SAI":
          return 421;
        case "RENEKTON":
          return 58;
        case "RENGAR":
          return 107;
        case "RIVEN":
          return 92;
        case "RUMBLE":
          return 68;
        case "RYZE":
          return 13;
        case "SEJU":
        case "SEJUANI":
          return 113;
        case "SHACO":
          return 35;
        case "SHEN":
          return 98;
        case "SHYVANA":
          return 102;
        case "SINGED":
          return 27;
        case "SION":
          return 14;
        case "SIVIR":
          return 15;
        case "SKARNER":
          return 72;
        case "SONA":
          return 37;
        case "SORAKA":
          return 16;
        case "SWAIN":
          return 50;
        case "SYNDRA":
          return 134;
        case "TK":
        case "TAHMKENCH":
        case "TAHM-KENCH":
          return 223;
        case "TALIYAH":
          return 163;
        case "TALON":
          return 91;
        case "TARIC":
          return 44;
        case "TEEMO":
          return 17;
        case "THRESH":
          return 412;
        case "TRISTANA":
          return 18;
        case "TRUNDLE":
          return 48;
        case "TRYNDAMERE":
          return 23;
        case "TF":
        case "TWISTEDFATE":
        case "TWISTED-FATE":
          return 4;
        case "TWITCH":
          return 29;
        case "UDYR":
          return 77;
        case "URGOT":
          return 6;
        case "VARUS":
          return 110;
        case "VAYNE":
          return 67;
        case "VEIGAR":
          return 45;
        case "VELKOS":
        case "VEL-KOS":
          return 161;
        case "VI":
          return 254;
        case "VIKTOR":
          return 112;
        case "VLAD":
        case "VLADIMIR":
          return 8;
        case "VOLI":
        case "VOLIBEAR":
          return 106;
        case "WW":
        case "WARWICK":
          return 19;
        case "WUKONG":
        case "MONKEY":
        case "MONKEYKING":
        case "MONKEY-KING":
          return 62;
        case "XERATH":
          return 101;
        case "XIN":
        case "XINZHAO":
        case "XIN-ZHAO":
          return 5;
        case "YASUO":
          return 157;
        case "YORICK":
          return 83;
        case "ZAC":
          return 154;
        case "ZED":
          return 238;
        case "ZIGGS":
          return 115;
        case "ZILEAN":
          return 26;
        case "ZYRA":
          return 143;
        default:
          return 22;
      }
    }

    public static int GetSpell(string name)
    {
      switch (name)
      {
        case "CLEANSE":
          return 1;
        case "EXHAUST":
          return 3;
        case "FLASH":
          return 4;
        case "GHOST":
          return 6;
        case "HEAL":
          return 7;
        case "SMITE":
          return 11;
        case "TELEPORT":
          return 12;
        case "IGNITE":
          return 14;
        case "BARRIER":
          return 21;
        default:
          return 0;
      }
    }
  }
}
